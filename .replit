modules = ["python-3.11"]

[nix]
channel = "stable-24_05"

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Flask Web App"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Flask Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Flask App"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Flask Application"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Gallery App"

[[workflows.workflow]]
name = "Flask Web App"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python app.py"
waitForPort = 5000

[[workflows.workflow]]
name = "Flask Server"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python app.py"
waitForPort = 5000

[[workflows.workflow]]
name = "Flask App"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 app.py"
waitForPort = 5000

[[workflows.workflow]]
name = "Flask Application"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m flask --app app run --host=0.0.0.0 --port=5000"
waitForPort = 5000

[[workflows.workflow]]
name = "Gallery App"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python app.py"
waitForPort = 8080

[deployment]
run = ["sh", "-c", "python3 -m flask --app app run --host=0.0.0.0 --port=5000"]

[[ports]]
localPort = 80
externalPort = 3000

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 8080
externalPort = 8080
